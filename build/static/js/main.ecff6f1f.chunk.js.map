{"version":3,"sources":["server.js","Mason.js","pages/MissingPage.js","pages/Dashboard.js","ImageCapture.js","components/QRScanner.js","pages/PlayerPortal.js","components/Timer.js","App.js","serviceWorker.js","index.js"],"names":["Models","ModelServer","location","Object","C_Users_chris_Desktop_Hidden_Haven_Quest_src_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","socket","io","_this","Promise","resolve","emit","_ref","models","each","name","methods","Model","forEach","method","_len","arguments","length","args","Array","_key","Stream","concat","id","on","result","server","connect","_connect","C_Users_chris_Desktop_Hidden_Haven_Quest_src_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_chris_Desktop_Hidden_Haven_Quest_src_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","stop","apply","object","undefined","callback","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","_ref3","value","_ref2","C_Users_chris_Desktop_Hidden_Haven_Quest_src_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","err","return","defineProperty","prototype","enumerable","writable","C_Users_chris_Desktop_Hidden_Haven_Quest_src_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","callbacks","setTimeout","C_Users_chris_Desktop_Hidden_Haven_Quest_src_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","push","is","option1","when","condition","elseIs","option2","toString","MissingPage","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","react_default","createElement","className","class","Component","Users","Rounds","Dashboard","_getPrototypeOf2","call","state","round","selectedChallengeID","users","fetchCurrentRound","fetchUsers","beginGame","_fetchCurrentRound","asyncToGenerator","regenerator_default","_this2","current","then","setState","_fetchUsers","_callee2","_this3","_context2","all","_this4","_this$state","complete","challenges","map","challenge","href","onClick","select","description","user","challengeID","style","width","cursor","assign","height","overflow","src","image","alt","_assign","_callee3","_this$state2","_context3","update","_x","ImageCapture","videoStreamTrack","videoElement","kind","DOMException","_videoStreamTrack","readyState","_previewStream","MediaStream","videoElementPlaying","addEventListener","HTMLMediaElement","srcObject","URL","createObjectURL","muted","setAttribute","play","canvasElement","document","canvas2dContext","getContext","reject","MediaSettingsRange","min","max","exposureCompensation","exposureMode","fillLightMode","focusMode","imageHeight","imageWidth","iso","redEyeReduction","whiteBalanceMode","zoom","self","videoWidth","videoHeight","drawImage","toBlob","error","frame","window","createImageBitmap","alert","get","QRScanner","startQRScanner","_startQRScanner","mediaStream","canvas","ctx","track","imageCapture","video","scan","navigator","mediaDevices","getUserMedia","facingMode","sent","getVideoTracks","refs","body","append","imageData","code","abrupt","getImageData","jsQR","data","props","onInput","ref","Challenges","PlayerPortal","attempt","solve","lastAttempt","fetchUser","_fetchUser","subscribe","match","params","userID","fetchChallenge","_fetchChallenge","find","_x2","QRScanner_QRScanner","Timer","secondsLeft","_componentDidMount","remaining","time","minutes","Math","floor","seconds","toFixed","App","Timer_Timer","BrowserRouter","Switch","Route","path","component","Boolean","hostname","require","default","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ecff6f1f.chunk.js","sourcesContent":["import io from 'socket.io-client';\r\nimport { each, Stream } from './Mason'\r\n\r\nclass ModelServer {\r\n    constructor(location){\r\n        this.socket = io(location)\r\n    }\r\n\r\n\r\n    connect(){\r\n        return new Promise( resolve => {\r\n            this.socket.emit('fetch-models', {}, ( { models } ) => {\r\n                each(models, ( name, methods) => {\r\n                    const Model = new Object\r\n                    methods.forEach( method =>{\r\n                        Model[method] = (...args) => {\r\n                            return new Stream( resolve => {\r\n                                this.socket.emit(`${name}-${method}`, args, id => {\r\n                                    this.socket.on(id, result => {\r\n                                        resolve(result)\r\n                                    })\r\n                                })\r\n                            })\r\n                        }\r\n                    })\r\n                    this[name] = Model\r\n                })\r\n                resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const Models = new ModelServer('https://hidden-haven-quest.triframe.cloud');\r\n\r\nexport const server = {\r\n    connect: async function(){\r\n        await Models.connect()\r\n    }\r\n}","Object.defineProperty(Object.prototype, 'entries', {enumerable:false, writable:true, value: \r\n    function(){\r\n        return Object.entries(this)\r\n    }\r\n});\r\n\r\nexport function map(object = new Object, callback){\r\n    let returnValues = new Object;\r\n    for( let index in object ){\r\n        let element = object[index]\r\n        returnValues[index] = callback(index, element, object);\r\n    }\r\n    return returnValues; \r\n}\r\n\r\nexport function each(object = new Object, callback){\r\n    for( const [index, element] of object.entries() ){\r\n        callback(index, element, object);\r\n    }\r\n}\r\n\r\nexport class Stream {\r\n    constructor(callback){\r\n        this.callbacks = new Array\r\n        setTimeout( () => callback( (...args) => this.emit(...args) ) )\r\n    }\r\n\r\n    then(callback){\r\n        this.callbacks.push(callback)\r\n    }\r\n\r\n    emit(...args){\r\n        this.callbacks.forEach(callback => callback(...args))\r\n    }\r\n}\r\n\r\nexport class EventEmitter {\r\n\r\n    constructor(){\r\n        this.bin = new Object\r\n    }\r\n\r\n    on(event, callback){\r\n        this.bin[event] = this.bin[event] || new Array\r\n        this.bin[event].push(callback)\r\n    }\r\n\r\n    emit(event, payload){\r\n        if(this.bin[event]) this.bin[event].forEach( callback => callback(payload))\r\n    }\r\n}\r\n\r\nexport function is(option1){\r\n\r\n    return {\r\n        when(condition){\r\n            return {\r\n                elseIs(option2){\r\n                    if(condition) return option1\r\n                    else return option2\r\n                },\r\n\r\n                toString(){\r\n                    if(condition) return option1\r\n                    else return false\r\n                }\r\n            }\r\n        },\r\n\r\n        toString(){\r\n            return option1\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class MissingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron\">\r\n        <h1 class=\"display-4\">Oops!</h1>\r\n        <p class=\"lead\">You have probably arrived here by mistake, please go back and try again...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Models } from '../server'\r\nimport { is } from '../Mason'\r\n\r\nconst { Users, Rounds } = Models\r\n\r\nexport class Dashboard extends Component {\r\n\r\n    state = {\r\n        round: null,\r\n        selectedChallengeID: null,\r\n        users: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchCurrentRound()\r\n        this.fetchUsers()\r\n        Rounds.beginGame()\r\n    }\r\n\r\n    async fetchCurrentRound(){\r\n        Rounds.current()\r\n            .then( round => {\r\n                this.setState({ round, selectedChallengeID: null })\r\n            })\r\n    }\r\n\r\n    async fetchUsers(){\r\n        Users.all()\r\n            .then( users => {\r\n                this.setState({ users })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let { users, round, selectedChallengeID } = this.state\r\n        if(!round) return <h3>Loading...</h3>\r\n        if(round.complete) return <h3>You Win!</h3>\r\n        if(!selectedChallengeID) selectedChallengeID = round.challenges[0].id\r\n        return (\r\n            <div>\r\n                <h1>{round.name}</h1>\r\n                <ul className=\"nav nav-pills\">\r\n                    { round.challenges.map( challenge => (\r\n                        <li key={challenge.id} className=\"nav-item\">\r\n                            <a href=\"javascript:void(0)\" onClick={() => this.select(challenge.id)} className={`nav-link ${is('active').when(selectedChallengeID === challenge.id)}`} >\r\n                                {challenge.description}\r\n                            </a>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            <div className=\"card-deck\">               \r\n                {users.map( user => (\r\n                    <div key={user.id} className={`card ${is('border-primary').when(user.challengeID === selectedChallengeID)}`} style={{width: '18rem', cursor: 'pointer'}} onClick={() => this.assign(user)}>\r\n                        <div style={{ height: '100px', overflow: 'hidden' }}>\r\n                            <img className=\"card-img-top\" src={user.image} alt=\"Card image cap\"/>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{user.name}</h5>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Reducers\r\n    select(challengeID){\r\n        this.setState({ selectedChallengeID: challengeID})\r\n    }\r\n\r\n    async assign(user){\r\n        let { selectedChallengeID, round } = this.state\r\n        if(!selectedChallengeID) selectedChallengeID = round.challenges[0].id\r\n        if(user.challengeID != selectedChallengeID) await Users.update(user.id, { challengeID: selectedChallengeID })\r\n        else await Users.update(user.id, { challengeID: null })\r\n    }\r\n}\r\n\r\n","export class ImageCapture {\r\n\r\n    /**\r\n     * TODO https://www.w3.org/TR/image-capture/#constructors\r\n     *\r\n     * @param {MediaStreamTrack} videoStreamTrack - A MediaStreamTrack of the 'video' kind\r\n     */\r\n    constructor(videoStreamTrack, videoElement) {\r\n    if (videoStreamTrack.kind !== 'video')\r\n        throw new DOMException('NotSupportedError');\r\n\r\n    this._videoStreamTrack = videoStreamTrack;\r\n    if (!('readyState' in this._videoStreamTrack)) {\r\n        // Polyfill for Firefox\r\n        this._videoStreamTrack.readyState = 'live';\r\n    }\r\n\r\n    // MediaStream constructor not available until Chrome 55 - https://www.chromestatus.com/feature/5912172546752512\r\n    this._previewStream = new MediaStream([videoStreamTrack]);\r\n    this.videoElement = videoElement\r\n    this.videoElementPlaying = new Promise(resolve => {\r\n        this.videoElement.addEventListener('playing', resolve);\r\n    });\r\n    if (HTMLMediaElement) {\r\n        this.videoElement.srcObject = this._previewStream;  // Safari 11 doesn't allow use of createObjectURL for MediaStream\r\n    } else {\r\n        this.videoElement.src = URL.createObjectURL(this._previewStream);\r\n    }\r\n    this.videoElement.muted = true;\r\n    this.videoElement.setAttribute('playsinline', ''); // Required by Safari on iOS 11. See https://webkit.org/blog/6784\r\n    this.videoElement.play();\r\n\r\n    this.canvasElement = document.createElement('canvas');\r\n    // TODO Firefox has https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas\r\n    this.canvas2dContext = this.canvasElement.getContext('2d');\r\n    }\r\n\r\n    /**\r\n     * https://w3c.github.io/mediacapture-image/index.html#dom-imagecapture-videostreamtrack\r\n     * @return {MediaStreamTrack} The MediaStreamTrack passed into the constructor\r\n     */\r\n    get videoStreamTrack() {\r\n    return this._videoStreamTrack;\r\n    }\r\n\r\n    /**\r\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-getphotocapabilities\r\n     * @return {Promise<PhotoCapabilities>} Fulfilled promise with\r\n     * [PhotoCapabilities](https://www.w3.org/TR/image-capture/#idl-def-photocapabilities)\r\n     * object on success, rejected promise on failure\r\n     */\r\n    getPhotoCapabilities() {\r\n    return new Promise(function executorGPC(resolve, reject) {\r\n        // TODO see https://github.com/w3c/mediacapture-image/issues/97\r\n        const MediaSettingsRange = {\r\n        current: 0, min: 0, max: 0,\r\n        };\r\n        resolve({\r\n        exposureCompensation: MediaSettingsRange,\r\n        exposureMode: 'none',\r\n        fillLightMode: 'none',\r\n        focusMode: 'none',\r\n        imageHeight: MediaSettingsRange,\r\n        imageWidth: MediaSettingsRange,\r\n        iso: MediaSettingsRange,\r\n        redEyeReduction: false,\r\n        whiteBalanceMode: 'none',\r\n        zoom: MediaSettingsRange,\r\n        });\r\n        reject(new DOMException('OperationError'));\r\n    });\r\n    }\r\n\r\n    /**\r\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-setoptions\r\n     * @param {Object} photoSettings - Photo settings dictionary, https://www.w3.org/TR/image-capture/#idl-def-photosettings\r\n     * @return {Promise<void>} Fulfilled promise on success, rejected promise on failure\r\n     */\r\n    setOptions(photoSettings = {}) {\r\n    return new Promise(function executorSO(resolve, reject) {\r\n        // TODO\r\n    });\r\n    }\r\n\r\n    /**\r\n     * TODO\r\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-takephoto\r\n     * @return {Promise<Blob>} Fulfilled promise with [Blob](https://www.w3.org/TR/FileAPI/#blob)\r\n     * argument on success; rejected promise on failure\r\n     */\r\n    takePhoto() {\r\n    const self = this;\r\n    return new Promise(function executorTP(resolve, reject) {\r\n        // `If the readyState of the MediaStreamTrack provided in the constructor is not live,\r\n        // return a promise rejected with a new DOMException whose name is \"InvalidStateError\".`\r\n        if (self._videoStreamTrack.readyState !== 'live') {\r\n        return reject(new DOMException('InvalidStateError'));\r\n        }\r\n        self.videoElementPlaying.then(() => {\r\n        try {\r\n            self.canvasElement.width = self.videoElement.videoWidth;\r\n            self.canvasElement.height = self.videoElement.videoHeight;\r\n            self.canvas2dContext.drawImage(self.videoElement, 0, 0);\r\n            self.canvasElement.toBlob(resolve);\r\n        } catch (error) {\r\n            reject(new DOMException('UnknownError'));\r\n        }\r\n        });\r\n    });\r\n    }\r\n\r\n    /**\r\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-grabframe\r\n     * @return {Promise<ImageBitmap>} Fulfilled promise with\r\n     * [ImageBitmap](https://www.w3.org/TR/html51/webappapis.html#webappapis-images)\r\n     * argument on success; rejected promise on failure\r\n     */\r\n    grabFrame() {\r\n    const self = this;\r\n    return new Promise(function executorGF(resolve, reject) {\r\n        // `If the readyState of the MediaStreamTrack provided in the constructor is not live,\r\n        // return a promise rejected with a new DOMException whose name is \"InvalidStateError\".`\r\n        if (self._videoStreamTrack.readyState !== 'live') {\r\n        return reject(new DOMException('InvalidStateError'));\r\n        }\r\n        self.videoElementPlaying.then(() => {\r\n        try {\r\n            self.canvasElement.width = self.videoElement.videoWidth;\r\n            self.canvasElement.height = self.videoElement.videoHeight;\r\n            self.canvas2dContext.drawImage(self.videoElement, 0, 0);\r\n            // TODO polyfill https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmapFactories/createImageBitmap for IE\r\n            let frame = window.createImageBitmap(self.canvasElement)\r\n            resolve(frame);\r\n        } catch (error) {\r\n            alert(error)\r\n            // reject(new DOMException('UnknownError'));\r\n        }\r\n        });\r\n    });\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport jsQR from \"jsqr\";\r\nimport { ImageCapture } from '../ImageCapture'\r\n\r\nexport class QRScanner extends Component {\r\n\r\n    componentDidMount(){\r\n        this.startQRScanner()\r\n    }\r\n\r\n    async startQRScanner(){\r\n        const mediaStream = await navigator.mediaDevices.getUserMedia({video: { facingMode:  \"environment\"  } })\r\n        const canvas = document.createElement('canvas')\r\n        const ctx = canvas.getContext('2d')\r\n        const track = mediaStream.getVideoTracks()[0];\r\n        let imageCapture = new ImageCapture(track, this.refs.video);\r\n        let video = imageCapture.videoElement\r\n        document.body.append(video)\r\n        let scan = async () => {\r\n            canvas.width = video.videoWidth\r\n            canvas.height = video.videoHeight\r\n            ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight)\r\n            if(!video.videoWidth || !video.videoHeight) return setTimeout(scan, 10)\r\n            let imageData = ctx.getImageData(0, 0, video.videoWidth, video.videoHeight);\r\n            let code = jsQR(imageData.data, video.videoWidth, video.videoHeight)\r\n            if(code && typeof this.props.onInput === 'function') this.props.onInput(code.data) \r\n            setTimeout(scan, 10)\r\n        }\r\n        scan()  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <video ref=\"video\"/>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Models } from '../server'\r\nimport { QRScanner } from '../components/QRScanner';\r\n\r\nconst { Users, Rounds, Challenges } = Models\r\nexport class PlayerPortal extends Component {\r\n\r\n    state = {}\r\n\r\n    componentDidMount(){\r\n        this.fetchUser()\r\n    }\r\n\r\n    async fetchUser(){\r\n        Users.subscribe(this.props.match.params.userID)\r\n            .then(user => {\r\n                this.fetchChallenge(user.challengeID)\r\n            })\r\n    }\r\n\r\n    async fetchChallenge(challengeID){\r\n        let challenge = await Challenges.find(challengeID)\r\n        this.setState({ challenge, lastAttempt: null })\r\n    }\r\n\r\n    render() {\r\n        const { lastAttempt, challenge } = this.state\r\n        if(!challenge) return <h1>Awaiting Challenge...</h1>\r\n        return (\r\n            <div>\r\n                <h1>{challenge.description}</h1>\r\n                <div>\r\n                { lastAttempt === false &&\r\n                    <h3 className='text-danger'>Incorrect, please try again...</h3>\r\n                }\r\n                { lastAttempt === true &&\r\n                    <h3 className='text-success'>Challenge Complete!</h3>\r\n                }\r\n                </div>\r\n                <QRScanner onInput={this.attempt}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    attempt = async (code) => {\r\n        if(this.state.challenge){\r\n            let result = await Challenges.solve(this.state.challenge.id, code)\r\n            this.setState({ lastAttempt: result })\r\n        }\r\n    }\r\n}\r\n\r\n","import { Models } from '../server'\r\nimport React, { Component } from 'react';\r\n\r\nexport class Timer extends Component {\r\n\r\n    state = {\r\n        secondsLeft: 0\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { Timer } = Models\r\n        Timer.remaining()\r\n            .then( secondsLeft => {\r\n                this.setState({ secondsLeft  })\r\n            })\r\n    }\r\n\r\n    render(){\r\n        var time = this.state.secondsLeft/1000\r\n        if(time < 0) return <span className=\"text-danger\">Game Over</span>\r\n        var minutes = Math.floor(time / 60);  \r\n        var seconds = time - minutes * 60;\r\n        return `${minutes}:${seconds.toFixed()}`\r\n    }\r\n\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Route, Switch } from 'react-router'\nimport { MissingPage } from './pages/MissingPage'\nimport { Dashboard } from './pages/Dashboard';\nimport { PlayerPortal } from './pages/PlayerPortal'\nimport { Timer } from './components/Timer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\"> \n        <div className=\"container\">\n          <Timer />\n          <BrowserRouter>\n            <Switch>\n              <Route path=\"/portal/:userID\" component={PlayerPortal} />\n              <Route path=\"/dashboard\" component={Dashboard} />\n              <Route path=\"/\" component={MissingPage} />\n            </Switch>\n          </BrowserRouter>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { server } from './server'\nimport * as serviceWorker from './serviceWorker';\n\n\n(async function(){\n    await server.connect()\n    let  App = require('./App').default\n    ReactDOM.render(<App />, document.getElementById('root'));\n})()\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}