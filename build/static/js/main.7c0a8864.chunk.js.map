{"version":3,"sources":["server.js","Mason.js","pages/Instructions.js","components/Timer.js","pages/Dashboard.js","ImageCapture.js","components/QRScanner.js","pages/PlayerPortal.js","App.js","serviceWorker.js","index.js"],"names":["Models","ModelServer","location","Object","C_Users_chris_Desktop_Hidden_Haven_Quest_src_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","socket","io","_this","Promise","resolve","emit","_ref","models","each","name","methods","Model","forEach","method","_len","arguments","length","args","Array","_key","Stream","concat","id","on","result","server","connect","_connect","C_Users_chris_Desktop_Hidden_Haven_Quest_src_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_chris_Desktop_Hidden_Haven_Quest_src_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","stop","apply","object","undefined","callback","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","_ref3","value","_ref2","C_Users_chris_Desktop_Hidden_Haven_Quest_src_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","err","return","defineProperty","prototype","enumerable","writable","C_Users_chris_Desktop_Hidden_Haven_Quest_src_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","callbacks","setTimeout","C_Users_chris_Desktop_Hidden_Haven_Quest_src_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","push","is","option1","when","condition","elseIs","option2","toString","Instructions","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","react_default","createElement","className","class","Link","to","Component","Timer","_getPrototypeOf2","call","state","secondsLeft","_componentDidMount","asyncToGenerator","regenerator_default","_this2","remaining","then","setState","time","minutes","Math","floor","seconds","toFixed","Users","Rounds","Dashboard","round","selectedChallengeID","users","fetchCurrentRound","fetchUsers","beginGame","_fetchCurrentRound","current","challenges","map","challenge","includes","_fetchUsers","_callee2","_this3","_context2","all","_this4","_this$state","complete","Timer_Timer","href","onClick","select","solved","description","user","challengeID","style","width","cursor","assign","height","overflow","src","image","alt","_assign","_callee3","_this$state2","_context3","update","_x","ImageCapture","videoStreamTrack","videoElement","kind","DOMException","_videoStreamTrack","readyState","_previewStream","MediaStream","videoElementPlaying","addEventListener","HTMLMediaElement","srcObject","URL","createObjectURL","muted","setAttribute","play","canvasElement","document","canvas2dContext","getContext","reject","MediaSettingsRange","min","max","exposureCompensation","exposureMode","fillLightMode","focusMode","imageHeight","imageWidth","iso","redEyeReduction","whiteBalanceMode","zoom","self","videoWidth","videoHeight","drawImage","toBlob","error","frame","window","createImageBitmap","alert","get","QRScanner","startQRScanner","_startQRScanner","mediaStream","canvas","ctx","track","imageCapture","video","scan","navigator","mediaDevices","getUserMedia","facingMode","sent","getVideoTracks","refs","body","append","imageData","code","abrupt","getImageData","jsQR","data","props","onInput","ref","Challenges","PlayerPortal","attempt","solve","lastAttempt","fetchUser","_fetchUser","subscribe","match","params","userID","fetchChallenge","_fetchChallenge","find","_x2","QRScanner_QRScanner","App","BrowserRouter","Switch","Route","path","component","Boolean","hostname","require","default","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c0a8864.chunk.js","sourcesContent":["import io from 'socket.io-client';\r\nimport { each, Stream } from './Mason'\r\n\r\nclass ModelServer {\r\n    constructor(location){\r\n        this.socket = io(location)\r\n    }\r\n\r\n\r\n    connect(){\r\n        return new Promise( resolve => {\r\n            this.socket.emit('fetch-models', {}, ( { models } ) => {\r\n                each(models, ( name, methods) => {\r\n                    const Model = new Object\r\n                    methods.forEach( method =>{\r\n                        Model[method] = (...args) => {\r\n                            return new Stream( resolve => {\r\n                                this.socket.emit(`${name}-${method}`, args, id => {\r\n                                    this.socket.on(id, result => {\r\n                                        resolve(result)\r\n                                    })\r\n                                })\r\n                            })\r\n                        }\r\n                    })\r\n                    this[name] = Model\r\n                })\r\n                resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const Models = new ModelServer('https://hidden-haven-quest.triframe.cloud');\r\n\r\nexport const server = {\r\n    connect: async function(){\r\n        await Models.connect()\r\n    }\r\n}","Object.defineProperty(Object.prototype, 'entries', {enumerable:false, writable:true, value: \r\n    function(){\r\n        return Object.entries(this)\r\n    }\r\n});\r\n\r\nexport function map(object = new Object, callback){\r\n    let returnValues = new Object;\r\n    for( let index in object ){\r\n        let element = object[index]\r\n        returnValues[index] = callback(index, element, object);\r\n    }\r\n    return returnValues; \r\n}\r\n\r\nexport function each(object = new Object, callback){\r\n    for( const [index, element] of object.entries() ){\r\n        callback(index, element, object);\r\n    }\r\n}\r\n\r\nexport class Stream {\r\n    constructor(callback){\r\n        this.callbacks = new Array\r\n        setTimeout( () => callback( (...args) => this.emit(...args) ) )\r\n    }\r\n\r\n    then(callback){\r\n        this.callbacks.push(callback)\r\n    }\r\n\r\n    emit(...args){\r\n        this.callbacks.forEach(callback => callback(...args))\r\n    }\r\n}\r\n\r\nexport class EventEmitter {\r\n\r\n    constructor(){\r\n        this.bin = new Object\r\n    }\r\n\r\n    on(event, callback){\r\n        this.bin[event] = this.bin[event] || new Array\r\n        this.bin[event].push(callback)\r\n    }\r\n\r\n    emit(event, payload){\r\n        if(this.bin[event]) this.bin[event].forEach( callback => callback(payload))\r\n    }\r\n}\r\n\r\nexport function is(option1){\r\n\r\n    return {\r\n        when(condition){\r\n            return {\r\n                elseIs(option2){\r\n                    if(condition) return option1\r\n                    else return option2\r\n                },\r\n\r\n                toString(){\r\n                    if(condition) return option1\r\n                    else return false\r\n                }\r\n            }\r\n        },\r\n\r\n        toString(){\r\n            return option1\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class Instructions extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"jumbotron\">\r\n          <h1 class=\"display-4\">Welcome to Hidden Haven Quest</h1>\r\n        </div>\r\n        <p><code>sudo rm -rf /</code> is a lovely one-line command that deletes everything on your hard drive.</p>\r\n        <p>Unfortunately, it is the fate which shall befall your computer should you fail any one of the <strong>12</strong> challenges ahead of you in the next <strong>10</strong> minutes.</p>\r\n        <p>Each challenge is a riddle, which will direct you to a location in (or around) the house.</p>\r\n        <p>The good news, is you will have help. Upon clicking \"Begin\" below, you will invite members of your family to aid in solving these challenges. Given the timelimit, you will want to distribute your team across multiple challenges at a time, which you will be able to do from your <strong>dashboard</strong>.</p>\r\n        <p>Once a team member has been assigned a challenge, they will be able to use their mobile device as a scanner to <strong>scan</strong> the code left at the locations indicated by that challenge.</p>\r\n        <p>Once the code has been scanned, the challenge will be considered completed. Once all codes have been scanned, the game will be over and you will have won <strong>Hidden Haven Quest</strong></p>\r\n        <p>Good luck!</p>\r\n        <Link to='/dashboard' className=\"btn btn-success\">Begin...</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import { Models } from '../server'\r\nimport React, { Component } from 'react';\r\n\r\nexport class Timer extends Component {\r\n\r\n    state = {\r\n        secondsLeft: 0\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { Timer } = Models\r\n        Timer.remaining()\r\n            .then( secondsLeft => {\r\n                this.setState({ secondsLeft  })\r\n            })\r\n    }\r\n\r\n    render(){\r\n        var time = this.state.secondsLeft/1000\r\n        if(time < 0) return <span className=\"text-danger\">Game Over</span>\r\n        var minutes = Math.floor(time / 60);  \r\n        var seconds = time - minutes * 60;\r\n        return `Time Remaining: ${minutes}:${seconds.toFixed()}`\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Models } from '../server'\r\nimport { is } from '../Mason'\r\nimport { Timer } from '../components/Timer';\r\n\r\n\r\nconst { Users, Rounds } = Models\r\n\r\nexport class Dashboard extends Component {\r\n\r\n    state = {\r\n        round: null,\r\n        selectedChallengeID: null,\r\n        users: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchCurrentRound()\r\n        this.fetchUsers()\r\n        Rounds.beginGame()\r\n    }\r\n\r\n    async fetchCurrentRound(){\r\n        Rounds.current()\r\n            .then( round => {\r\n                let selectedChallengeID = this.state.selectedChallengeID;\r\n                if(!round.challenges.map(challenge => challenge.id).includes(selectedChallengeID)) selectedChallengeID = null\r\n                this.setState({ round, selectedChallengeID: selectedChallengeID })\r\n            })\r\n    }\r\n\r\n    async fetchUsers(){\r\n        Users.all()\r\n            .then( users => {\r\n                this.setState({ users })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let { users, round, selectedChallengeID } = this.state\r\n        if(!round) return <h3>Loading...</h3>\r\n        if(round.complete) return (\r\n            <div className=\"jumbotron text-center\">\r\n                <h1 className=\"display-1\">You Win!</h1>\r\n            </div>\r\n        )\r\n        if(!selectedChallengeID) selectedChallengeID = round.challenges[0].id\r\n        return (\r\n            <div>\r\n                <Timer />\r\n                <h1>{round.name}</h1>\r\n                <ul className=\"nav nav-pills\">\r\n                    { round.challenges.map( challenge => (\r\n                        <li key={challenge.id} className=\"nav-item\">\r\n                            <a href=\"javascript:void(0)\" onClick={() => this.select(challenge.id)} className={`nav-link ${is('active').when(selectedChallengeID === challenge.id)} ${is('bg-success text-white').when(challenge.solved)}`} >\r\n                                {challenge.description}\r\n                            </a>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            <div className=\"card-deck\">               \r\n                {users.map( user => (\r\n                    <div key={user.id} className={`card ${is('border-primary').when(user.challengeID === selectedChallengeID)}`} style={{width: '18rem', cursor: 'pointer'}} onClick={() => this.assign(user)}>\r\n                        <div style={{ height: '100px', overflow: 'hidden' }}>\r\n                            <img className=\"card-img-top\" src={user.image} alt=\"Card image cap\"/>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{user.name}</h5>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Reducers\r\n    select(challengeID){\r\n        this.setState({ selectedChallengeID: challengeID})\r\n    }\r\n\r\n    async assign(user){\r\n        let { selectedChallengeID, round } = this.state\r\n        if(!selectedChallengeID) selectedChallengeID = round.challenges[0].id\r\n        if(user.challengeID != selectedChallengeID) await Users.update(user.id, { challengeID: selectedChallengeID })\r\n    }\r\n}\r\n\r\n","export class ImageCapture {\r\n\r\n    /**\r\n     * TODO https://www.w3.org/TR/image-capture/#constructors\r\n     *\r\n     * @param {MediaStreamTrack} videoStreamTrack - A MediaStreamTrack of the 'video' kind\r\n     */\r\n    constructor(videoStreamTrack, videoElement) {\r\n    if (videoStreamTrack.kind !== 'video')\r\n        throw new DOMException('NotSupportedError');\r\n\r\n    this._videoStreamTrack = videoStreamTrack;\r\n    if (!('readyState' in this._videoStreamTrack)) {\r\n        // Polyfill for Firefox\r\n        this._videoStreamTrack.readyState = 'live';\r\n    }\r\n\r\n    // MediaStream constructor not available until Chrome 55 - https://www.chromestatus.com/feature/5912172546752512\r\n    this._previewStream = new MediaStream([videoStreamTrack]);\r\n    this.videoElement = videoElement\r\n    this.videoElementPlaying = new Promise(resolve => {\r\n        this.videoElement.addEventListener('playing', resolve);\r\n    });\r\n    if (HTMLMediaElement) {\r\n        this.videoElement.srcObject = this._previewStream;  // Safari 11 doesn't allow use of createObjectURL for MediaStream\r\n    } else {\r\n        this.videoElement.src = URL.createObjectURL(this._previewStream);\r\n    }\r\n    this.videoElement.muted = true;\r\n    this.videoElement.setAttribute('playsinline', ''); // Required by Safari on iOS 11. See https://webkit.org/blog/6784\r\n    this.videoElement.play();\r\n\r\n    this.canvasElement = document.createElement('canvas');\r\n    // TODO Firefox has https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas\r\n    this.canvas2dContext = this.canvasElement.getContext('2d');\r\n    }\r\n\r\n    /**\r\n     * https://w3c.github.io/mediacapture-image/index.html#dom-imagecapture-videostreamtrack\r\n     * @return {MediaStreamTrack} The MediaStreamTrack passed into the constructor\r\n     */\r\n    get videoStreamTrack() {\r\n    return this._videoStreamTrack;\r\n    }\r\n\r\n    /**\r\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-getphotocapabilities\r\n     * @return {Promise<PhotoCapabilities>} Fulfilled promise with\r\n     * [PhotoCapabilities](https://www.w3.org/TR/image-capture/#idl-def-photocapabilities)\r\n     * object on success, rejected promise on failure\r\n     */\r\n    getPhotoCapabilities() {\r\n    return new Promise(function executorGPC(resolve, reject) {\r\n        // TODO see https://github.com/w3c/mediacapture-image/issues/97\r\n        const MediaSettingsRange = {\r\n        current: 0, min: 0, max: 0,\r\n        };\r\n        resolve({\r\n        exposureCompensation: MediaSettingsRange,\r\n        exposureMode: 'none',\r\n        fillLightMode: 'none',\r\n        focusMode: 'none',\r\n        imageHeight: MediaSettingsRange,\r\n        imageWidth: MediaSettingsRange,\r\n        iso: MediaSettingsRange,\r\n        redEyeReduction: false,\r\n        whiteBalanceMode: 'none',\r\n        zoom: MediaSettingsRange,\r\n        });\r\n        reject(new DOMException('OperationError'));\r\n    });\r\n    }\r\n\r\n    /**\r\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-setoptions\r\n     * @param {Object} photoSettings - Photo settings dictionary, https://www.w3.org/TR/image-capture/#idl-def-photosettings\r\n     * @return {Promise<void>} Fulfilled promise on success, rejected promise on failure\r\n     */\r\n    setOptions(photoSettings = {}) {\r\n    return new Promise(function executorSO(resolve, reject) {\r\n        // TODO\r\n    });\r\n    }\r\n\r\n    /**\r\n     * TODO\r\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-takephoto\r\n     * @return {Promise<Blob>} Fulfilled promise with [Blob](https://www.w3.org/TR/FileAPI/#blob)\r\n     * argument on success; rejected promise on failure\r\n     */\r\n    takePhoto() {\r\n    const self = this;\r\n    return new Promise(function executorTP(resolve, reject) {\r\n        // `If the readyState of the MediaStreamTrack provided in the constructor is not live,\r\n        // return a promise rejected with a new DOMException whose name is \"InvalidStateError\".`\r\n        if (self._videoStreamTrack.readyState !== 'live') {\r\n        return reject(new DOMException('InvalidStateError'));\r\n        }\r\n        self.videoElementPlaying.then(() => {\r\n        try {\r\n            self.canvasElement.width = self.videoElement.videoWidth;\r\n            self.canvasElement.height = self.videoElement.videoHeight;\r\n            self.canvas2dContext.drawImage(self.videoElement, 0, 0);\r\n            self.canvasElement.toBlob(resolve);\r\n        } catch (error) {\r\n            reject(new DOMException('UnknownError'));\r\n        }\r\n        });\r\n    });\r\n    }\r\n\r\n    /**\r\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-grabframe\r\n     * @return {Promise<ImageBitmap>} Fulfilled promise with\r\n     * [ImageBitmap](https://www.w3.org/TR/html51/webappapis.html#webappapis-images)\r\n     * argument on success; rejected promise on failure\r\n     */\r\n    grabFrame() {\r\n    const self = this;\r\n    return new Promise(function executorGF(resolve, reject) {\r\n        // `If the readyState of the MediaStreamTrack provided in the constructor is not live,\r\n        // return a promise rejected with a new DOMException whose name is \"InvalidStateError\".`\r\n        if (self._videoStreamTrack.readyState !== 'live') {\r\n        return reject(new DOMException('InvalidStateError'));\r\n        }\r\n        self.videoElementPlaying.then(() => {\r\n        try {\r\n            self.canvasElement.width = self.videoElement.videoWidth;\r\n            self.canvasElement.height = self.videoElement.videoHeight;\r\n            self.canvas2dContext.drawImage(self.videoElement, 0, 0);\r\n            // TODO polyfill https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmapFactories/createImageBitmap for IE\r\n            let frame = window.createImageBitmap(self.canvasElement)\r\n            resolve(frame);\r\n        } catch (error) {\r\n            alert(error)\r\n            // reject(new DOMException('UnknownError'));\r\n        }\r\n        });\r\n    });\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport jsQR from \"jsqr\";\r\nimport { ImageCapture } from '../ImageCapture'\r\n\r\nexport class QRScanner extends Component {\r\n\r\n    componentDidMount(){\r\n        this.startQRScanner()\r\n    }\r\n\r\n    async startQRScanner(){\r\n        const mediaStream = await navigator.mediaDevices.getUserMedia({video: { facingMode:  \"environment\"  } })\r\n        const canvas = document.createElement('canvas')\r\n        const ctx = canvas.getContext('2d')\r\n        const track = mediaStream.getVideoTracks()[0];\r\n        let imageCapture = new ImageCapture(track, this.refs.video);\r\n        let video = imageCapture.videoElement\r\n        document.body.append(video)\r\n        let scan = async () => {\r\n            canvas.width = video.videoWidth\r\n            canvas.height = video.videoHeight\r\n            ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight)\r\n            if(!video.videoWidth || !video.videoHeight) return setTimeout(scan, 10)\r\n            let imageData = ctx.getImageData(0, 0, video.videoWidth, video.videoHeight);\r\n            let code = jsQR(imageData.data, video.videoWidth, video.videoHeight)\r\n            if(code && typeof this.props.onInput === 'function') this.props.onInput(code.data) \r\n            setTimeout(scan, 10)\r\n        }\r\n        scan()  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <video ref=\"video\"/>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Models } from '../server'\r\nimport { QRScanner } from '../components/QRScanner';\r\nimport { Timer } from '../components/Timer';\r\n\r\n\r\nconst { Users, Rounds, Challenges } = Models\r\nexport class PlayerPortal extends Component {\r\n\r\n    state = {}\r\n\r\n    componentDidMount(){\r\n        this.fetchUser()\r\n    }\r\n\r\n    async fetchUser(){\r\n        Users.subscribe(this.props.match.params.userID)\r\n            .then(user => {\r\n                this.fetchChallenge(user.challengeID)\r\n            })\r\n    }\r\n\r\n    async fetchChallenge(challengeID){\r\n        let challenge = await Challenges.find(challengeID)\r\n        this.setState({ challenge, lastAttempt: null })\r\n    }\r\n\r\n    render() {\r\n        const { lastAttempt, challenge } = this.state\r\n        if(!challenge) return (\r\n            <div>\r\n                <Timer />\r\n                <h1>Awaiting Challenge...</h1>\r\n            </div>\r\n        )\r\n        return (\r\n            <div>\r\n                <Timer />\r\n                <h1>{challenge.description}</h1>\r\n                <div>\r\n                { lastAttempt === false &&\r\n                    <h3 className='text-danger'>Incorrect, please try again...</h3>\r\n                }\r\n                { lastAttempt === true &&\r\n                    <h3 className='text-success'>Challenge Complete!</h3>\r\n                }\r\n                </div>\r\n                <QRScanner onInput={this.attempt}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    attempt = async (code) => {\r\n        if(this.state.challenge){\r\n            let result = await Challenges.solve(this.state.challenge.id, code)\r\n            this.setState({ lastAttempt: result })\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Route, Switch } from 'react-router'\nimport { Instructions } from './pages/Instructions'\nimport { Dashboard } from './pages/Dashboard';\nimport { PlayerPortal } from './pages/PlayerPortal'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\"> \n        <div className=\"container\">\n          <BrowserRouter>\n            <Switch>\n              <Route path=\"/portal/:userID\" component={PlayerPortal} />\n              <Route path=\"/dashboard\" component={Dashboard} />\n              <Route path=\"/\" component={Instructions} />\n            </Switch>\n          </BrowserRouter>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { server } from './server'\nimport * as serviceWorker from './serviceWorker';\n\n\n(async function(){\n    await server.connect()\n    let  App = require('./App').default\n    ReactDOM.render(<App />, document.getElementById('root'));\n})()\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}